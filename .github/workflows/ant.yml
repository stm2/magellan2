name: Create release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Test with ant
      run: |
         ant -noinput -buildfile build.xml run_tests
         fails=$(grep -L  "Failures: 0, Errors: 0" test/junit/TEST-*)
         if [ -n "$fails" ]; then
           echo Errors in $fails
           cat $fails
           exit 1
         fi
      # do not exit before all commands are executed
      shell: bash --noprofile --norc -o pipefail {0}
      
    - name: Build with ant
      run: ant -noinput -buildfile build.xml

    - name: Generate version string
      id: get-version
      run: |
        echo "::set-output name=basic::$(ant -q -S print_version)"

    - name: Read RELEASENOTES and CHANGELOG
      id: changelog
      run: |
        value=$(cat RELEASENOTES.txt | iconv -f ISO-8859-1; echo -e '\n# Excerpt from CHANGELOG.txt\n\n'; head -20 CHANGELOG.txt | iconv -f ISO-8859-1; echo -e '\n...\n' )
        value="${value//'%'/'%25'}"
        value="${value//$'\n'/'%0A'}"
        value="${value//$'\r'/'%0D'}"
        echo "::set-output name=body::$value"

    - name: Create release
      id: create_release
      uses: actions/create-release@v1 # v1 has a bug, use master to correctly create the body
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: ${{ steps.changelog.outputs.body }}
        draft: true
        prerelease: true

    - name: Upload zip
      id: upload-release-zip
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./magellan_v${{ steps.get-version.outputs.basic }}.zip
        asset_name: magellan_v${{ steps.get-version.outputs.basic }}.zip
        asset_content_type: application/zip

    - name: Upload jar
      id: upload-release-jar
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./magellan_v${{ steps.get-version.outputs.basic }}.jar
        asset_name: magellan_v${{ steps.get-version.outputs.basic }}.jar
        asset_content_type: application/java-archive
        
